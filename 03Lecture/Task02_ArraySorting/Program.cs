// 1. Найти позицию минимального элемента 
// в неотсортированной части массива

// 2. Произвести обмен этого значения со 
// значением первой неотсортированной позиции 

// 3. Повторять пока есть не отсортированные элементы

int[] arr = {1, 5, 4, 3, 2, 6, 7, 1, 1};


/// <summary>
/// Метод вывода массива
/// </summary>
/// <param name="array">Массив для вывода</param>
void PrintArray(int[] array)
{
    int count = array.Length;

    for (int i = 0; i < count; i++)
    {
        Console.Write($"{array[i]}"); 
        // По сути печатаем массив по каждому элементу отдельно
    }
    Console.WriteLine();
    }

/// <summary>
/// Сортировка массива (минимальное число передвигаем вперед)
/// </summary>
/// <param name="array">Массив для сортировки</param>
void SelectionSort(int[] array)
{
    for (int i = 0; i < array.Length - 1; i++)
    // Отнимаем 1 от длины массива, т.к. дальше идет плюс один к индексу
    // Таким образом условие for гласит:
    // индекс равен нулю и пока индекс - 1 меньше длины массива
    // выполняем условие и прибаляем к индексу 1
    {
        int minPosition = i;
        // вводим минимальную позицию по индексу с которой начнем сортировку

        for (int j = i + 1; j < array.Length; j++)
        // Пока индекс - 1 меньше длины массива выолняем услоовие 
        // Условие:
        // Вводим значени j, которое равно индекс плюс 1 
        // Пока j меньше длины массива, то выолняем условие и прибаляем к j один
        {
            if(array[j] < array[minPosition])
            // Если аргумент массима под индексом j 
            // меньше аргумента массива с индексом мин позиции (i)
            {
                minPosition = j;
                // То индекс минимального аргумента фиксируется в переменной минимальной позиции
            }
        }
        // Далее делаем замену 
        // Вводим переменую temporary и присваиваем ей значение аргумента массива с индексом i
        // аргументу массива под индексом i присваиваем значение аргумента массива в минимальной позии
        // а в мин позиции перносим temporary
        int temporary = array[i];
        array[i] = array[minPosition];
        array[minPosition] = temporary;

        // Пример
        // массив 9 1 3 4 5 6 7 3 4 5
        // i = 0; 
        // int minPosition = i;
        // тогда элемент массива мин позиции это элемент с индексом 0 – "9"
        // j = i + 1;
        // Тогда j равна 1 
        // и элемент массива с индексом j – "1"
        // Далее сравнимавем элементы массива с индексами i & j
        // Т.к. j > i => инужно поменять их местами 
        // Для этого вводим доп переменную в которую кладем перменную с индексом 0 (большую перменную)
        // Потом на место большейц переменной кладем менбшую – с индексом 1
        // и после на место переменной с индексом 1 кладем введенную ранее новую переменную 
        // (в которой хранится больший элемент (с индексом 2))
    }
}

PrintArray(arr);
SelectionSort(arr);

PrintArray(arr);

// Для упорячдочивания массива в обратном порядке (от большего к меньшему)
// Достаточно поменять знак в сравнении элементов – строка 49
